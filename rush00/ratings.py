class Ratings:
    """
    Analyzing data from ratings.csv
    """
    def __init__(self, path_to_the_file):
        """
        Put here any fields that you think you will need.
        """
    class Movies:    
        def dist_by_year(self):
            """
            Метод возвращает словарь, в котором ключи — это годы, а значения — количество.
            Отсортируйте по годам по возрастанию. Вам нужно извлечь годы из временных меток.
            """
            return ratings_by_year
        
        def dist_by_rating(self):
            """
            Метод возвращает словарь, в котором ключи — это оценки, а значения — количество. Отсортируйте его по рейтингу по возрастанию.
            """
            return ratings_distribution
        
        def top_by_num_of_ratings(self, n):
            """
            Метод возвращает первые n фильмов по количеству оценок.
            Это словарь, в котором ключи — это названия фильмов, а значения — числа.
            Отсортируйте его по номерам в порядке убывания.
            """
            return top_movies
        
        def top_by_ratings(self, n, metric=average):
            """
            Метод возвращает первые n фильмов по среднему или медианному значению оценок.
            Это словарь, где ключами являются названия фильмов, а значениями являются значения метрик.
            Отсортируйте его по метрике по убыванию. Значения должны быть округлены до 2 знаков после запятой.
            """
            return top_movies
        
        def top_controversial(self, n):
            """
            Метод возвращает n лучших фильмов по дисперсии рейтингов.
            Это словарь, в котором ключи — это названия фильмов, а значения — дисперсии.
            Отсортируйте их по дисперсии по убыванию. Значения должны быть округлены до 2 знаков после запятой.
            """
            return top_movies

    class Users:
        """
        В этом классе должны работать три метода.
        1-й возвращает распределение пользователей по количеству сделанных ими оценок.
        2-й возвращает распределение пользователей по средним или медианным оценкам, сделанным ими.
        3-й возвращает топ-n пользователей с наибольшей разницей в оценках. Наследуется от класса Movies.
        Несколько методов аналогичны методам из него.
        """
